摘要
当前互联网行业快速发展，已经日渐融入人们日常生活的衣、食、住、行的各个方面。作为中国领先的本地生活信息及交易平台，大众点评网不仅为用户提供商户信息、消费点评及消费优惠等信息服务，同时也提供团购、餐厅预订、外卖及电子会员卡等线上到线下的交易服务。用户为大众点评网创建内容，大众点评网会以虚拟货币给予奖励。为了提升用户活跃度，吸引他们发表更多有用的信息，网站决定基于现有的虚拟货币体系开发一个新的兑换系统，让用户能使用虚拟货币兑换虚拟或实体礼品。
本课题调研了当前国内外生活服务需求的现状及竞争者的相关信息，对实现虚拟货币兑换系统所需的理论与技术，首先描述了系统需求，之后重点介绍了虚拟货币兑换系统的结构以及具体设计与实现。由于应用场景要求，系统需要在原有的虚拟货币体系上进行开发，同时提供高可用性和稳定性，并且能对作弊有一定的抵御能力。为达到设计目标，系统采用了主流的J2EE开发框架，运用Memcached等技术，同时使用相关算法对产生的大量数据进行处理以满足设计需要，最后描述了系统测试的相关内容，验证该系统的可用性。
经过详细功能测试及数据分析，本系统达到了预期设计目标，为用户提供了一个可靠的虚拟货币兑换服务，提升了用户活跃度，同时为更多的会员提供了有效信息。

关键词 
互联网 虚拟货币兑换 J2EE
Internet/ Virtual Currency Exchange /J2EE

Abstract

The Internet industry is developing rapidly nowadays, and it has already 

第一章 绪论
1.1 论文背景及意义
大众点评网是中国领先的本地生活信息及消费平台，通过这个平台，用户可以获取美食、休闲娱乐、购物、结婚、亲子、酒店旅游等商户信息及优惠信息，同时看到其他用户对该商户的评价，为自己的消费决策做参考。与此同时，用户可以在这里对自己消费过的商户进行评价，为其他用户的选择提供参考。为了增加原创信息数量，提高用户的活跃度，用户在大众点评网发表原创信息如点评、图片、榜单、签到、社区帖子等，通过诚信系统及人工综合判定为有效信息后，会获得数量不等的虚拟货币作为奖励。同时，大众点评网会不定期的推出各种活动，用户通过参与活动也能获得部分虚拟货币。日积月累之下，用户账户中的虚拟货币越来越多，但是用户对虚拟货币的价值及作用并没有一个明确的概念，因此积极性受到影响。为了体现虚拟货币的作用，同时回馈老用户，激励用户为大众点评网增加更多原创内容，创造更多价值，虚拟货币兑换系统应运而生。
作为回馈老用户的贡献及鼓励新用户提供原创内容的一个平台，虚拟货币兑换系统主要提供了两类礼品，即虚拟礼品和实物礼品，对商户和用户各有侧重。虚拟礼品侧重于商户需求，主要包括团购券、优惠券等，商户付出较小的成本即可提高曝光度，并可直接获得订单并转化为收益；实物礼品更侧重于用户需求，主要是印有大众点评网标记的各种实用小物件，如收纳箱、钥匙链、名片盒、绕线器等，同时会限量推出U盘等价值较高的礼品，以此引导用户创建优质内容，增加活跃度。
本文介绍的虚拟货币兑换系统从使用者角度来看主要包括三大模块：用户礼品兑换模块、用户礼品查看模块、工作人员礼品管理模块。通过用户礼品兑换模块，用户使用账户中虚拟货币的可消费部分在兑换中心兑换虚拟或实体礼品；通过用户礼品查看模块，用户能对已获得礼品进行管理，包括查看已获得礼品的状态、更改邮寄地址等；通过工作人员礼品管理模块，工作人员能够新增、修改礼品，同时对某条兑换记录进行操作，更改礼品邮寄信息，更新礼品邮寄状态。

1.2 国内外技术应用现状及发展趋势
改革开放以来，我国国民经济持续快速增长，综合国力显著增强，人民生活水平不断提高。俗话说，民以食为天，温饱问题解决后，从吃得饱到吃得好成为当前更多消费者的追求。不仅仅是食，在衣、住、行等各个方面人们的要求都不再是最基本最简单的要求，而是希望享受到到更好更优质的服务。随着互联网行业的蓬勃发展以及信息时代数据的爆炸式增长，商户口碑从最初的人与人之间口口相传扩展到了网络上，消费者在做出消费决定之前能看到更多其他消费者的消费意见，综合权衡之下做出自己的判断，同时也以自己的消费经历为其他人提供参考，充分体现了互联网时代人人都是参与者、人人都是贡献者的特点。
在国外，创立于2004年的Yelp是美国著名的商户点评网站，囊括各地餐馆、购物中心、酒店、旅游等领域的商户，用户可以在Yelp网站中给商户打分，提交评论，交流购物体验等。在Yelp 中搜索一个餐厅或者旅馆，能看到它的简要介绍以及网友的点论，点评者还会给出多少星级的评价，通常点评者都是亲身体验过该商户服务的消费者，评论大多形象细致。与传统的点评类网站相比，Yelp更看重真实用户发表的评论，尤其是“一小撮”热衷于点评的用户。Yelp对评价进行分类展示：先是10个以内的权威人士的评价，然后是推荐的评价，然后是不评分的建议，接着是经常签到的人士，最后一行用不起眼的灰色指向当前不推荐的评价。为了吸引并留住此类用户，Yelp通过各种形式开展用户之间的互动，并给予优秀用户奖励。截止2013年第四季度，Yelp的每月用户访问数量达到了1.2亿，点评总数达到5300万。

1.3 本论文的主要工作
本论文通过应用J2EE技术和Memcached技术，针对当前用户拥有一定数量虚拟货币无处消费的现状，设计并实现了一套虚拟货币兑换系统，能够让用户通过虚拟货币兑换相应的礼品，以此鼓励用户贡献有价值的信息，提高会员活跃度。本文的具体工作内容如下：
一、分析具体的系统需求，明确系统的用户及适用范围，确定兑换规则及流程，并根据这些画出UML用例图。
二、在大众点评网现有系统架构的基础上，设计整个虚拟货币兑换系统的体系结构，包括系统架构模型，组件模型等。
三、根据需求，对整个系统进行模块划分，完成模块设计和功能分解，同时根据数据库规范化方法及公司数据库创建规范，确定数据库表结构。
四、完成各个模块的代码编写，同时依据需求文档完成测试用例编写。
五、在系统完成后，运用编写好的测试用例对系统进行功能测试、集成测试和压力测试，验证系统达到了预期设计目标。

1.4 本论文的组织结构
本论文主要介绍了大众点评网虚拟货币兑换系统的设计与实现过程，总共分为七章，各章节具体内容如下：
第一章为绪论，主要介绍本论文的研究背景及实际意义，同时对国内外其他类似的用户产生内容的网站如何激励用户进行了调查和研究，以此作为参考给出本系统的设计目标。
第二章为相关技术概述，主要介绍本论文中使用到的J2EE框架、Memcached缓存技术、MySQL数据库系统的读写分离、主从复制技术、布隆过滤器等，为后续章节提供理论基础以及技术支持。
第三章为系统需求分析，根据本系统的设计目标确定系统需求，从用户的角度对系统进行模块划分，确定各个模块的具体功能需求，同时进行详细的分析。
第四章为系统具体设计与实现，首先从系统架构方面进行设计，确定采用SOA分层架构，然后从开发人员的角度对系统各个模块进行功能分解，在此基础上完成数据库表设计，然后实现负责的模块的具体功能实现。
第五章为系统测试及线上验证部分，使用设计好的测试用例对各个模块进行功能测试，然后对整个系统进行集成测试，最后部署到生成环境，观察跟踪系统运行情况。
第六章为总结和展望，对整个系统开发测试的整个流程进行总结，提出不足和改进，并对未来进一步的工作进行展望。

第二章 相关技术概述
2.1 J2EE框架
J2EE是Java2平台企业版的简称，是企业级应用框架的技术规范。本论文开发的系统中主要使用的是Struts2框架、Spring框架和Ibatis框架。下面分别对这三种框架进行简单介绍。
2.1.1 Struts2框架
Struts2框架是基于MVC（Model-View-Controller）设计模式的可扩展的Java Web框架，与Struts1相比有很大不同。Struts2使用的是WebWork的设计核心，其框架本身可以分为三部分：核心控制器FilterDispatcher、业务控制器Action和企业业务逻辑组件。其中，核心控制器是整个框架的基础，而业务控制控制器Action和企业业务逻辑组件需要用户自己来实现。在Struts 2应用中，Action都被定义在struts.xml文件中，且具有name属性和class属性。
Struts 2 框架的基本处理流程如图2.1所示，大致包括以下几个步骤：
（1）	客户端浏览器发出指向一个Servlet容器的http请求
（2）	核心控制器FilterDispatcher过滤用户请求查找相应的ActionMapper，如果找到了对应的ActionMapper，该请求将交由Action代理来处理。
（3）	Action代理通过ConfigurationManager找到需要调用的Action类和方法，并创建一个ActionInvocation的实例，通过命名模式来调用对应的Action，在调用Action前后会调用一些拦截器（Interceptor）进行一些其他操作。
（4）	Action的execute处理完请求返回后，result会以Template的方式（如FreeMarker）返回给请求的客户端浏览器。
图2.1 Struts 2 框架的基本处理流程
2.1.2 Spring框架
Spring框架是一个轻量级的J2EE框架，但是这里的轻量级并不是指Spring框架的只能用于轻量级开发的应用场景，而是指的是Spring框架本身的设计与实现是轻盈的。它的轻盈体现在框架本身的结构，并且能够很好的支持其他应用工具，方便与其他工具结合使用，具有很高的应用价值，目前比较流行的组合便是SSH，应用广泛。与企业级EJB相比，Spring可以帮助开发人员降低各技术层次的风险。
控制反转IoC(Inversion of Control)（也称为依赖注入DI(Dependence Injection)）机制是Spring框架的核心。Spring架构中服务组件都被抽象到IoC容器中，IoC是指依赖关系由容器来控制，而不是开发人员手动的直接操控，这种将控制权由程序代码转移到外部容器的方式称为“翻转”。依赖注入是对控制反转的另一种解释，指的是组件的依赖关系由容器在运行期间动态地注入。Spring一般采用设值注入和构造注入两种机制，其中设值注入指使用set/get 方法实现组件间的依赖，构造注入指在类的构造方法中实现依赖。Spring 通过配置文件来管理组件间的依赖关系。如此一来，开发人员不需要编写某些设计模式或者其他方法，就可以通过容器直接获取所需的业务组件。如图2.2 展示了Spring 框架的结构。 
2.2.3 Ibatis框架
Ibatis框架是封装、简化数据库操作的另一个框架，与Hibernate相比它是一种半
自动化的对象关系映射框架。Hibernate框架通过xml映射文件把数据库中的表与简单Java对象（POJO）对应起来，对数据库进行全面封装，系统会在运行时全自动的为POJO与表的映射关系生成SQL语句并执行。但Ibatis框架重在处理的是POJO与SQL语句之间的一个映射，并不会为开发人员自动生成SQL语句，具体的SQL语句还需要开发人员自己编写，通过SQL Map将参数和运行结果映射到指定的POJO对象中。
SQL Map是Ibatis框架的核心，通过配置SQL Map的XML文件，开发人员能够自定义需要的数据库代码，这样能极大部分的减少访问数据库的代码数量。在执行映射声明时，SQL Map创建JDBC的预处理实例，将XML文件中描述的对象作为该实例的参数传入，执行预处理语句并在ResultSet中创建结果对象。执行不同的操作时，返回的结果对象也不同，执行更新操作返回数据库中表受影响的行数，执行查询操作返回结果对象或对象的集合。
与Hibernate框架相比，Ibatis框架更灵活。虽然Hibernate框架能够自动生成SQL并执行，但是对于一些复杂的操作来说，使用Ibatis框架更合适，因为开发人员能够通过SQL语句的优化来提高数据库的响应能力，虽然增加了开发人员的工作量，需要开发人员熟悉SQL，但为系统的设计提供了更大的自由空间。图2.3描述了Ibatis框架的结构。
图2.3 Ibatis框架结构图
2.2 Memcached缓存
Memcached是一个高性能的分布式内存缓存系统，目前被广泛应用于互联网行业，能在动态应用中降低数据库的负载，使服务器的性能最大化，提升用户的访问速度，让用户获得更好的体验。Memcached在内存中维护着一个大容量的存储键/值对的HashMap，通过选择合适的哈希算法将键尽可能的散列为哈希值，以便于对比和查找。当容量达到指定值时，通过LRU算法，Memcached自动删除不适用的缓存。
Memcached采用的是C/S架构，由服务器端和客户端两个核心组件构成，在缓存查询时，客户端首先计算键的哈希值来确定键/值对数据所处的服务端位置。确定之后，客户就将具体查询请求发送给对应的服务端，由服务端通过一个内部的哈希算法查找，并返回真正的数据。

